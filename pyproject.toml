[project]
name = "archive-query-log"
authors = [
    { name = "Jan Heinrich Merker", email = "heinrich.merker@uni-jena.de" },
    { name = "Sebastian Heineking", email = "sebastian.heineking@uni-leipzig.de" },
    { name = "Maik FrÃ¶be", email = "maik.froebe@uni-jena.de" },
    { name = "Lukas Gienapp", email = "lukas.gienapp@uni-leipzig.de" },
    { name = "Harrisen Scells", email = "harry.scells@uni-leipzig.de" },
    { name = "Benno Stein", email = "benno.stein@uni-weimar.de" },
    { name = "Matthias Hagen", email = "matthias.hagen@uni-jena.de" },
    { name = "Martin Potthast", email = "martin.potthast@uni-kassel.de" },
    { name = "Simon Ruth", email = "simon.ruth@uni-kassel.de" },
]
description = "Mining Millions of Search Result Pages of Hundreds of Search Engines from 25 Years of Web Archives."
readme = "README.md"
license = "MIT"
requires-python = ">=3.13"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
]
dependencies = [
    "aiohttp~=3.11",
    "aiohttp-retry~=2.9",
    "asyncio-pool~=0.6.0",
    "beautifulsoup4~=4.12",
    "bleach~=6.2",
    "boto3~=1.35.99",
    "certifi~=2025.0,>=2025.4.26",
    "click~=8.1,>=8.1.8",
    "cssselect~=1.3",
    "dataclasses-json~=0.6.7",
    "diskcache~=5.6,>=5.6.3",
    "elasticsearch~=7.9.1",
    "elasticsearch-dsl~=7.4.1",
    "expiringdict~=1.2",
    "fastapi~=0.115.12",
    "flasgger~=0.9.7",
    "flask~=3.1",
    "flask-restful~=0.3.10",
    "joblib~=1.4",
    "lxml~=5.4",
    "marshmallow~=3.26",  # dataclasses-json 0.6.7 depends on marshmallow<4.0.0 and >=3.18.0
    "mergedeep~=1.3,>=1.3.4",
    "more-itertools~=10.7",
    "pandas~=2.2,>=2.2.3",
    "publicsuffixlist~=1.0,>=1.0.2.20250430",
    "pydantic~=2.11",
    "python-dotenv~=1.1",
    "python-slugify~=8.0,>=8.0.4",
    "python-whois~=0.9.5",
    "pyyaml~=6.0,>=6.0.2",
    "ranx~=0.3.20",
    "requests~=2.32",
    "requests-html~=0.10.0",
    "requests-ratelimiter~=0.7.0",
    "resiliparse~=0.15.2",
    "tqdm~=4.67",
    "unidecode~=1.4",
    "urllib3~=2.4",
    "warcio~=1.7",
    "warc-s3~=1.0,>=1.0.1",
    "warc-cache~=1.0,>=1.0.4",
    "web-archive-api~=1.1",
]
dynamic = ["version"]

[project.optional-dependencies]
tests = [
    "approvaltests~=14.5",
    "bandit[toml]~=1.8",
    "boto3-stubs[s3]~=1.35",
    "mypy~=1.15",
    "pandas-stubs~=2.2,>=2.2.3.250308",
    "pytest~=8.3,>=8.3.5",
    "pytest-cov~=6.1",
    "ruff~=0.11.8",
    "types-beautifulsoup4~=4.12,>=4.12.0.20250204",
    "types-bleach~=6.2,>=6.2.0.20241123",
    "types-lxml~=2025.0,>=2025.3.30",
    "types-python-slugify~=8.0,>=8.0.2.20240310",
    "types-pyyaml~=6.0,>=6.0.12.20250402",
    "types-requests~=2.32,>=2.32.0.20250328",
    "types-tqdm~=4.67,>=4.67.0.20250417",
]
examples = [
    "jupyter~=1.0",
    "matplotlib~=3.7",
    "seaborn~=0.13.0",
]
documentation = [
    "mkdocs~=1.5",
    "mkdocs-material~=9.5",
]

[project.urls]
"Homepage" = "https://github.com/webis-de/archive-query-log"
"Bug Tracker" = "https://github.com/webis-de/archive-query-log/issues"

[project.scripts]
archive_query_log = "archive_query_log.cli:cli"
archive-query-log = "archive_query_log.cli:cli"
aql = "archive_query_log.cli:cli"

[build-system]
requires = ["setuptools~=80.1", "setuptools_scm[toml]~=8.3", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
exclude = [
    "build",
    "venv",
    "notebooks",
    "integrations",
    "scripts",
    "data",
    "docs",
    "helm",
]

[tool.setuptools.package-data]
"*" = ["*.txt", "*.md", "*.rst"]

[tool.setuptools_scm]

[tool.ruff]
exclude = [
    "build",
    "venv",
    "notebooks",
    "integrations",
    "scripts",
    "data",
    "docs",
    "helm",
]

[tool.mypy]
ignore_missing_imports = true
exclude = [
    "build",
    "venv",
    "notebooks",
    "integrations",
    "scripts",
    "data",
    "docs",
    "helm",
]

[tool.bandit]
exclude_dirs = [
    "build",
    "venv",
    "notebooks",
    "integrations",
    "scripts",
    "data",
    "docs",
    "helm",
]

[tool.bandit.assert_used]
skips = ["**/test_*.py"]

[tool.pytest.ini_options]
log_cli = true
filterwarnings = [
    "ignore::marshmallow.warnings.RemovedInMarshmallow4Warning",
]
# Ignore the legacy results parsing tests for now.
# TODO: Re-enable tests.
addopts = [
    "--ignore=archive_query_log/legacy/results/test",
]